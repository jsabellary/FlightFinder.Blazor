<div class="px-4 py-3">
    @if (Itineraries != null && Itineraries.Count > 0)
    {
 <div class="title mb-3">
            <h2 class="mb-0">@Itineraries.Count results</h2>
      <select class="custom-select" @bind="chosenSortOrder">
      <option value="@SortOrder.Price">Cheapest</option>
       <option value="@SortOrder.Duration">Quickest</option>
 </select>
        </div>

        @foreach (var item in sortedItineraries)
        {
       <div class="mb-3 d-flex align-items-stretch">
          <ul class="list-group flex-grow-1 mb-0">
        <li class="list-group-item d-flex align-items-center">
          <SearchResultFlightSegment Symbol="▶" Flight="item.Outbound" />
                    </li>
   <li class="list-group-item d-flex align-items-center">
          <SearchResultFlightSegment Symbol="◀" Flight="item.Return" />
        </li>
 </ul>
        <div class="price d-flex flex-column justify-content-center align-items-center ml-3">
         <h3 class="mb-2">@item.Price.ToString("£0")</h3>
    <button class="btn btn-success" @onclick="() => OnAddItinerary.InvokeAsync(item)">Add</button>
           </div>
            </div>
        }
    }
    else if (Itineraries != null)
    {
        <div class="text-center text-muted py-5">
    <p>No results found. Try adjusting your search criteria.</p>
        </div>
    }
</div>

@code
{
    // Parameters
    [Parameter]
    public IReadOnlyList<Itinerary> Itineraries { get; set; }

    [Parameter]
    public EventCallback<Itinerary> OnAddItinerary { get; set; }

    // Private state
    private SortOrder chosenSortOrder;
    private IEnumerable<Itinerary> sortedItineraries
        => chosenSortOrder == SortOrder.Price
        ? Itineraries.OrderBy(x => x.Price)
    : Itineraries.OrderBy(x => x.TotalDurationHours);

    private enum SortOrder { Price, Duration }
}
